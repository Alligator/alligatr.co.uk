_model: experiment
---
name: 100 generator
---
technology: web
---
description: ðŸ’¯ify your own text
---
html:

  <style id="font-style">
@font-face {
  font-family: 'Ranga';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url(data:font/woff2;base64,) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
  </style>
  <style>
  /* body {
    background-color: #334;
    color: lightgoldenrodyellow;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 16pt;
  }
  main {
    max-width: 500px;
    margin: 0 auto;
    text-align: center;
  }
  p {
    margin: 0 0 .5rem 0;
    padding: 0;
  }

  a, a:visited {
    color: lightskyblue;
  }

  svg, img {
    border: 2px solid rgba(255, 255, 255, 0.2);
    border-radius: 4px;
  }

  input[type=text] {
    border: 2px solid rgba(255, 255, 255, 0.4);
    background: inherit;
    font-family: inherit;
    color: inherit;
    font-size: inherit;
    padding: .25rem .5rem;
    border-radius: 4px;
  }

  button {
    background-color: rgba(255, 255, 255, 0.4);
    border: none;
    font-family: inherit;
    color: inherit;
    font-size: inherit;
    padding: .5rem .5rem;
    border-radius: 4px;
    cursor: pointer;
  }

  .input-group {
    display: flex;
    flex-direction: column;
    gap: .5rem;
  }

  .svg-container {
    margin: 1rem;
    background-color: black;
    padding: 1rem;
  } */
  </style>
  <script>

const svgNs = 'http://www.w3.org/2000/svg';

function generatePath(x0, y0, x1, y1) {
  const cp0 = {
    x: x0 + ((x1 - x0) * 0.25),
    y: y0 + ((y1 - y0) * 0.75),
  };
  const cp1 = {
    x: x0 + ((x1 - x0) * 0.75),
    y: y1,
  };
  return `M ${x0} ${y0} C ${cp0.x} ${cp0.y}, ${cp1.x} ${cp1.y}, ${x1} ${y1}`;
}

function measureText(text) {
  const svg = document.createElementNS(svgNs, 'svg');

  const textEl = document.createElementNS(svgNs, 'text');
  textEl.setAttribute('font-family', 'Ranga');
  textEl.setAttribute('font-size', '30px');
  textEl.innerHTML = text;
  svg.appendChild(textEl);

  document.body.appendChild(svg);
  const width = textEl.getComputedTextLength();
  const bbox = textEl.getBBox();
  document.body.removeChild(svg);

  return {
    width: width * 1,
    height: bbox.height,
  };
}

function generateSvg(el, text) {
  const metrics = measureText(text);
  const lineHeight = metrics.width / 8;

  const svg = document.createElementNS(svgNs, 'svg');

  const topPathY = metrics.height + lineHeight/2;
  const topPath = document.createElementNS(svgNs, 'path');
  topPath.setAttribute('d', generatePath(
    5, topPathY,
    5 + metrics.width, topPathY - lineHeight,
  ));
  topPath.setAttribute('id', 'top-path');
  topPath.setAttribute('stroke', '#BC1331');
  topPath.setAttribute('stroke-width', '3px');
  topPath.setAttribute('stroke-linecap', 'round');
  topPath.setAttribute('fill', 'none');
  svg.appendChild(topPath);

  const bottomPath = document.createElementNS(svgNs, 'path');
  bottomPath.setAttribute('d', generatePath(
    10, topPathY + 4,
    3 + metrics.width, (topPathY - lineHeight) + 5,
  ));
  bottomPath.setAttribute('stroke', '#BC1331');
  bottomPath.setAttribute('stroke-width', '3px');
  bottomPath.setAttribute('stroke-linecap', 'round');
  bottomPath.setAttribute('fill', 'none');
  svg.appendChild(bottomPath);

  const textEl = document.createElementNS(svgNs, 'text');
  textEl.setAttribute('width', '100');
  textEl.setAttribute('transform', 'translate(1, -5)');
  textEl.setAttribute('fill', '#BC1331');
  textEl.setAttribute('font-family', 'Ranga');
  textEl.setAttribute('font-size', '30px');

  const textPath = document.createElementNS(svgNs, 'textPath');
  textPath.innerHTML = text;
  textPath.setAttribute('href', '#top-path');

  textEl.appendChild(textPath);
  svg.appendChild(textEl);

  el.appendChild(svg);
  const svgbb = svg.getBBox();
  svg.setAttribute('width', svgbb.width * 4);
  svg.setAttribute('height', svgbb.height * 3);
  svg.setAttribute('viewBox', `0 ${svgbb.y} ${svgbb.width} ${svgbb.height}`);
}

function generatePng(svg) {
  return new Promise((resolve, reject) => {
    // embed styles
    const defs = document.createElementNS(svgNs, 'defs');
    const style = document.createElementNS(svgNs, 'style');
    style.innerHTML = document.getElementById('font-style').innerHTML;
    defs.appendChild(style);
    svg.appendChild(defs);

    // get svg data url
    const svgText = new XMLSerializer().serializeToString(svg);
    const dataUrl = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svgText)}`;
    const img = new Image();
    img.src = dataUrl;

    // bung it on a canvas and generate a png data url
    img.onload = () => {
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');
      canvas.width = svg.getBoundingClientRect().width;
      canvas.height = svg.getBoundingClientRect().height;
      ctx.drawImage(img, 0, 0);
      const pngUrl = canvas.toDataURL('image/png');
      resolve(pngUrl);
    };
  });
}

window.onload = () => {
  const el = document.getElementById('svg-container');
  generateSvg(el, '100');

  document.getElementById('100').addEventListener('keyup', (evt) => {
    const el = document.getElementById('svg-container')
    el.innerHTML = '';
     generateSvg(el, evt.target.value);
  });

  document.getElementById('generate').addEventListener('click', (evt) => {
    generatePng(el.querySelector('svg')).then((png) => {
      const imgEl = document.createElement('img');
      imgEl.src = png;
      const el = document.getElementById('png-container');
      el.innerHTML = '';
      el.appendChild(imgEl);
    });
  });
};
  </script>

<p>ðŸ’¯ify your own text. generates an SVG. generate a png below for saving/sharing etc.</p>
<div id="svg-container"></div>
<br />

<label for="100">
  text to ðŸ’¯ify
  <input type="text" name="100" id="100" value="100">
</label>
<button id="generate" name="generate" type="button">generate png</button>

<div id="png-container"></div>